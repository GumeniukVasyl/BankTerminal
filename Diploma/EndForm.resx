<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>59</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j1JMH//Z
</value>
  </data>
</root>